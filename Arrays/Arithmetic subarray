
*** To find Arithmetic subarray ***
*** Time complexity : O(NLogN)
*** Space complexity : 0(1)

#include<iostream>
#include<vector>
#include<climits>
#include<bits/stdc++.h>
using namespace std;

bool check(vector<int>&ans){
  sort(ans.begin(),ans.end());
  int x=(ans[1]-ans[0]);

  for(int i=0;i<ans.size()-1;i++){
    if(ans[i]+x!=ans[i+1])
      return 0;
  }
  return 1;
}

int main()
{
  vector<int>v={4,6,5,9,3,7};
  vector<int>l={0,0,2},r={2,3,5};
  int n=l.size();
  vector<bool>ans;
  
  for(int i=0;i<n;i++){
    vector<int>a;

    for(int j=l[i];j<=r[i];j++)
      a.push_back(v[j]);
    sort(a.begin(),a.end());
    if(check(a)==1)
     ans.push_back(true);
    else
      ans.push_back(false);
  
  }

  for(int i=0;i<ans.size();i++)
   cout<<ans[i]<<" ";

}
