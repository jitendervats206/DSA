
*** To find the midian of sorted arrays ***
*** Time complexity : O(N)
*** Space complexity : 0(1)


#include<iostream>
#include<bits/stdc++.h>
using namespace std;

int check(int x,int t,int y,int z){
  if((y+z)%2==0 and (x==t or x==t+1))
   return 1;
  else if(x==t+1 and (y+z)%2!=0)
   return 1; 
  else
   return 0;
}

int main()
{
  int arr1[]={2,4};
  int arr2[]={1,3,4};
  int x=0;
  int start=0,end=0;
  float sum=0;
  int total=(sizeof(arr1)/4+sizeof(arr2)/4)/2;

  for(int i=0;i<total+1;i++){   
    if(arr1[start]<arr2[end]){
     x++;
     if((check(x,total,sizeof(arr1)/4,sizeof(arr2)/4)==1))
      sum=sum+min(arr1[start],arr2[end]);
     start++;
    }
     
    else if(arr1[start]>arr2[end]){
     x++;
     if((check(x,total,sizeof(arr1)/4,sizeof(arr2)/4)==1))
      sum=sum+min(arr1[start],arr2[end]);
     end++;
    }

    else if(arr1[start]==arr2[end]){
     x++;
     if((check(x,total,sizeof(arr1)/4,sizeof(arr2)/4)==1))
      sum=sum+arr2[end];
     x++;
     if((check(x,total,sizeof(arr1)/4,sizeof(arr2)/4)==1))
      sum=sum+arr2[end]; 
     start++;
     end++;
    }

  }
  if((sizeof(arr1)/4+sizeof(arr2)/4)%2==0)
   cout<<sum/2;
  else
   cout<<sum;
  
}
