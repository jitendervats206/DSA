
*** To find Min distinct subarray***
*** Time complexity : O(N)
*** Space complexity : 0(N)

#include<iostream>
#include<vector>
#include<bits/stdc++.h>
#include<climits>
using namespace std;
int main()
{
    vector<char>v={'a','a','b','b','b','c','b','b','a','c'};
    unordered_map<int,int>m;
    unordered_map<int,int>c;
    int mn=INT_MAX,x=0,start=0,end=0,c1=0,l=0;

    for(int i=0;i<v.size();i++){
      if(c[v[i]]>0);
      else{ 
       c1++;
       c[v[i]]=1;
      }
    }

    while(end<=v.size()){
      if(x!=c1){
       if(m[v[end]]>0){
        m[v[end]]++;
        l++;
        end++;
       }
       else{
        m[v[end]]=1;
        x++;
        l++;
        end++;
       }
      }
      else if(x==c1){
       m[v[start]]--;
       if(m[v[start]]==0)
        x--;
       start++;
       mn=min(l,mn);
       l--;
      }  
    }
   cout<<mn;
}
