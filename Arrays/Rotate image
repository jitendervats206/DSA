

*** rotate  2d matrix***
*** Time complexity : O(N*N)
*** Space complexity : 0(1)



#include<iostream>
#include<vector>
using namespace std;
int main()
{    
    vector<vector<int>>v={{1,2,3},{4,5,6},{7,8,9}};  
    for(int i=0;i<v.size();i++){
        for(int j=0;j<v[0].size();j++)
         cout<<v[i][j]<<" ";
        cout<<endl;
    }
    cout<<endl;    
    for(int x=0;x<v.size()-1;x++){
        int i=x+1;
        int j=x+1;
        while(i<v.size() and j<v[0].size()){
            swap(v[i][x],v[x][i]);
            i++;j++;
        }
    }

    for(int i=0;i<v.size();i++){
        for(int j=0;j<v[0].size();j++)
         cout<<v[i][j]<<" ";
        cout<<endl;
    }
    cout<<endl;
    
    int i=0,j=v[0].size()-1;
    while(i<j){
        for(int k=0;k<v.size();k++)
            swap(v[k][i],v[k][j]);
        i++;j--;
    }

    for(int i=0;i<v.size();i++){
     for(int j=0;j<v[0].size();j++)
      cout<<v[i][j]<<" ";
     cout<<endl;
    }
    
}
