
*** convert 0 to X ***
*** Time complexity : O(N)
*** Space complexity : 0(NLogN)



#include<iostream>
#include<vector>
#include<queue>
using namespace std;
void check(queue<pair<int,int>>&q,vector<vector<char>>&v){
  while(!q.empty()){
    int x=q.front().first;
    int y=q.front().second;
    q.pop();
   
    v[x][y]='t';
    if(x-1>-1 and v[x-1][y]=='0'){
     v[x-1][y]='t';
     q.push({x-1,y});}
    if(x+1<v.size() and v[x+1][y]=='0'){
     v[x+1][y]='t';
     q.push({x+1,y});}
    if(y-1>-1 and v[x][y-1]=='0'){
     v[x][y-1]='t';
     q.push({x,y-1});}
    if(y+1<v[0].size() and v[x][y+1]=='0'){
     v[x][y+1]='t';
     q.push({x,y+1});}
  }
}

int main()
{ 
  vector<vector<char>>v(6,vector<char>(7));
  queue<pair<int,int>>q;
  v[0]={'X','X','X','0','X','X','X'};
  v[1]={'X','0','0','X','0','0','X'};
  v[2]={'X','0','0','X','0','0','X'};
  v[3]={'X','0','0','X','0','X','X'};
  v[4]={'X','0','X','X','0','X','0'};
  v[5]={'0','0','0','X','X','X','0'};

  for(int i=1;i<v.size();i++)
   if(v[i][0]=='0')
    q.push({i,0});
  for(int i=1;i<v[0].size();i++)
   if(v[v.size()-1][i]=='0')
    q.push({v.size()-1,i});
  for(int i=v.size()-2;i>=0;i--)
    if(v[i][v[0].size()-1]=='0')
     q.push({i,v[0].size()-1});
  for(int i=v[0].size()-2;i>=0;i--)
    if(v[0][i]=='0')
     q.push({0,i});

  check(q,v);
  for(int i=0;i<v.size();i++){
    for(int j=0;j<v[i].size();j++){
      if(v[i][j]=='0')
       v[i][j]='X';
      else if(v[i][j]=='t')
       v[i][j]='0';
      cout<<v[i][j]<<" ";
    }
    cout<<endl;
  }
  
}
