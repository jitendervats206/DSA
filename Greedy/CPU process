
*** design working of CPU ***
*** Time complexity : O(N)
*** Space complexity : 0(N)


#include<iostream>
#include<vector>
#include<bits/stdc++.h>
using namespace std;
bool custom(vector<int>a,vector<int> b){
  return a[0]<b[0];
}
int main()
{
    int enque[]={1,3,7,8,2,5};
    int time[]= {2,4,3,2,2,6};
    int t1,i=0;
    vector<vector<int>>v;
    priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>mn;
    
    for(int i=0;i<sizeof(enque)/4;i++)
      v.push_back({enque[i],time[i],i});
    sort(v.begin(),v.end(),custom);
    t1=v[0][0];

    while(!mn.empty() or i<v.size()){
      if(mn.empty()){
        cout<<v[i][2]<<" ";
        t1=t1+v[i][1];
        i++;
      }
      else{
        cout<<mn.top().second<<" ";
        t1=t1+mn.top().first;
        mn.pop();
      }
      while(v[i][0]<=t1 and i<v.size()){
        mn.push({v[i][1],v[i][2]});
        i++;
      }
    }
}
