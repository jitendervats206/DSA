
*** To find max sum of three stacks***
*** Time complexity : O(N)
*** Space complexity : 0(1)

#include<iostream>
#include<vector>
#include<bits/stdc++.h>
using namespace std;
void sum(stack<int>&s,int &x){
  if(s.empty())
   return;
  
  int a=s.top();
  x=x+a;
  s.pop();
  sum(s,x);
  s.push(a);
}

int main()
{
  stack<int>s1,s2,s3;
  int x=0,y=0,z=0;
  s3.push(2);
  s3.push(3);
  s3.push(1);

  s2.push(3);
  s2.push(4);

  s1.push(1);
  s1.push(1);
  s1.push(5);

  sum(s1,x);
  sum(s2,y);
  sum(s3,z);

  while(!s1.empty() and !s2.empty() and !s3.empty()){
    if(x>=y){
      if(x>z){
       x=x-s1.top();
       s1.pop();
      }
      else{
       z=z-s3.top();
       s3.pop();
      }
    }
    else if(y>x){
      if(y>z){
       y=y-s2.top();
       s2.pop();
      }
      else{
       z=z-s3.top();
       s3.pop();
      }
    }
    if(x==y and y==z)
     break;
  }

  if(x==y and y==z)
   cout<<x;
  else
   cout<<0;
}
