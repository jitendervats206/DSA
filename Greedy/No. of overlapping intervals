
*** find overlapping interval ***
*** Time complexity : O(NLogN)
*** Space complexity : 0(1)


#include<iostream>
#include<vector>
#include<bits/stdc++.h>
using namespace std;
bool custom(pair<int,int>a,pair<int,int>b){
  return a.second<b.second;
}

int main()
{
    int start[]={5,1,2,1,6,3};
    int end[]=  {6,4,4,2,8,7};
    int total=0,x=-1;
    vector<pair<int,int>>v;
    for(int i=0;i<sizeof(start)/4;i++)
      v.push_back({start[i],end[i]});

    sort(v.begin(),v.end(),custom);

    for(int i=0;i<v.size();i++){
      if(v[i].first>=x){
        total++;
        x=v[i].second;
      }
    }
    cout<<"non overlapping interval : "<<total;
    cout<<endl<<"overlapping interval : "<<v.size()-total;
}
