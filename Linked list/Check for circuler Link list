
*** To check for circuler link list ***
*** Time complexity : O(N)
*** Space complexity : 0(1)

#include<iostream>
#include<cmath>
using namespace std;
class node{
  public:
  int data;
  node *next;
};

void input(int x[],int y,node *&head){
  node *l=NULL;
  for(int i=0;i<y;i++){
   node *temp=new node;
   temp->data=x[i];
   if(head==NULL)
    head=temp;
   else
    l->next=temp;
   l=temp;
   l->next=NULL;
  }
}

void output(node *&head){
  node *h=head;
  while(h!=NULL){
    cout<<h->data<<"->";
    h=h->next;
  }
  cout<<endl;
}

int main()
{
    node *head;
    head=NULL;
    bool flag=false;
    int arr[]={1,2,5,7,9,8};

    input(arr,sizeof(arr)/4,head);
    output(head);
    node*h=head;
    while(h->next!=NULL)
     h=h->next;

    h->next=head;
    h=head;
    while(h){
     if(h->next==head){
       cout<<"circuler LL"<<endl;
       h=head;
       for(int i=0;i<10;i++){
        cout<<h->data<<"->";
        h=h->next;
       }
       break;
     }
     else if(h->next==NULL)
      cout<<"no";
     h=h->next;
    }

}
