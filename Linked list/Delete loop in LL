
*** To remove loop present in LL***
*** Time complexity : O(N)
*** Space complexity : 0(1)

#include<iostream>
#include<unordered_map>
using namespace std;
class node{
  public:
  int data;
  node *next;
};

void input(int x,node *&head){
  node *temp=new node;
  temp->data=x;
  temp->next=head;
  head=temp;
}

void output(node *&head){
  node *h=head;
  while(h!=NULL ){
    cout<<h->data<<" ";
    h=h->next;
  }
}

int main()
{
    node *head;
    head=NULL;
    int x,k;
    int arr[]={1,2,3,4,5,6};

    for(int i=0;i<sizeof(arr)/4;i++)
     input(arr[i],head);
  
    node*fast=head;
    node*slow=head;

     while(fast->next and fast){
      slow=slow->next;
      fast=fast->next->next;
      if(slow==fast)
       break;
     }
 
     int count=1;
     slow=fast->next;
     while(slow!=fast){
      count++;
      slow=slow->next;
     }
     slow=head;
     fast=head;

     for(int i=0;i<count-1;i++)
      fast=fast->next;

     while(fast->next!=slow){
      fast=fast->next;
      slow=slow->next;
     }

     fast->next=NULL; 
     cout<<endl; 
     output(head);  
}
