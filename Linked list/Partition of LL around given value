

*** Make partion ***
*** Time complexity : O(N)
*** Space complexity : 0(1)

#include<iostream>
using namespace std;
class node{
  public:
  int data;
  node *next;
};

void input(int x[],int y,node *&head){
  head=NULL;
  node *l=head;
  for(int i=0;i<y;i++){
   node *temp=new node;
   temp->data=x[i];
   if(head==NULL)
    head=temp;
   else
    l->next=temp;
   l=temp;
   l->next=NULL;
  }
}

void output(node *&head){
  node *h=head;
  while(h!=NULL){
    cout<<h->data<<"->";
    h=h->next;
  }
  cout<<endl;
}

int main()
{
    node *head,*h,*h1,*h2,*h3;
    int arr[]={1,7,3,4,3,8,1,9,3,1,8,9,4,6,7};
    int x=6;
    node*left=new node,*right=new node;
    node*mid=new node;
    input(arr,sizeof(arr)/4,head);
    output(head);

    left->data=-1;
    right->data=-1;
    mid->data=-1;
    h1=left;
    h2=right;
    h3=mid;
    h=head;

    while(h){
      if(h->data<x){
        h1->next=h;
        h1=h1->next;
        h=h->next;
        h1->next=NULL;
      }
      else if(h->data>x){
        h2->next=h;
        h2=h2->next;
        h=h->next;
        h2->next=NULL;
      }
      else{
        h3->next=h;
        h3=h3->next;
        h=h->next;
        h3->next=NULL;
      }
    }
    h1->next=mid->next;
    h3->next=right->next;
    head=left->next;
    output(head);
  
}
