
*** remove nodes having bvalue equal to k ***
*** Time complexity : O(N)
*** Space complexity : 0(1)

#include<iostream>
using namespace std;
class node{
  public:
  int data;
  node *next;
};

void input(int x[],int y,node *&head){
  node *l=NULL;
  head=NULL;
  for(int i=0;i<y;i++){
   node *temp=new node;
   temp->data=x[i];
   if(head==NULL)
    head=temp;
   else
    l->next=temp;
   l=temp;
   l->next=NULL;
  }
}

void output(node *&head){
  node *h=head;
  while(h!=NULL){
    cout<<h->data<<"->";
    h=h->next;
  }
  cout<<endl;
}

int main()
{
   node *head;
   int k=2;
   int arr[]={2,2,1,8,2,6};
   input(arr,sizeof(arr)/4,head);
   output(head);
   node*h=new node;
   h->data=-1;
   h->next=head;
   head=h;
   while(h->next){
    if(h->next->data==k){
      node*m=h->next;
      h->next=m->next;
      delete m;
    }
    else
     h=h->next;
   }
   head=head->next;
   output(head);

}
