

*** rotate ll in group of k ***
*** Time complexity : O(N)
*** Space complexity : 0(1)


#include<iostream>
using namespace std;
class node{
  public:
  int data;
  node *next;
  node *pre;
};

void input(int x[],int y,node *&head){
  node *l=NULL;
  for(int i=0;i<y;i++){
   node *temp=new node;
   temp->data=x[i];
   if(head==NULL){
    head=temp;
    head->pre=l;
   }
   else{
    l->next=temp;
    temp->pre=l;
   }
   l=temp;
   l->next=NULL;
  }
}

void output(node *&head){
  node *h=head;
  while(h!=NULL){
    cout<<h->data<<"->";
    h=h->next;
  }
  cout<<endl;
}

void reverse(node *&h,node* &h1){
  while(h!=h1 and h->pre!=h1){
    swap(h->data,h1->data);
    h=h->next;
    h1=h1->pre;
  }
}

int main()
{
   node *head;
   int k=4;
   head=NULL;
   int arr[]={1,2,3,4,5,6,7,8,9,10};

   input(arr,sizeof(arr)/4,head);
   output(head);
   node *h=head,*h1=head;
   node *head1=NULL;

   while(h){
    for(int i=0;i<k-1 and h1->next!=NULL;i++)
     h1=h1->next;
    head1=h1->next;
    reverse(h,h1);
    h1=head1;
    h=head1;
   }
   output(head);

}


