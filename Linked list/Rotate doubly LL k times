

*** rotate doubly ll k times ***
*** Time complexity : O(N)
*** Space complexity : 0(1)



#include<iostream>
using namespace std;
class node{
  public:
  int data;
  node *next;
  node *pre;
};

void input(int x[],int y,node *&head){
  node *l=NULL;
  for(int i=0;i<y;i++){
   node *temp=new node;
   temp->data=x[i];
   if(head==NULL){
    head=temp;
    head->pre=l;
   }
   else{
    l->next=temp;
    temp->pre=l;
   }
   l=temp;
   l->next=NULL;
  }
}

void output(node *&head){
  node *h=head;
  while(h!=NULL){
    cout<<h->data<<"->";
    h=h->next;
  }
  cout<<endl;
}

int main()
{
   node *head;
   int k=8;
   head=NULL;
   int arr[]={18};
   input(arr,sizeof(arr)/4,head);
   output(head);
   node *h=head;
   node *h1=head;

    int x=0;
    while(h){
        x++;
        h=h->next;
    }

    if(k>x)
     k=k-x;
   
    h=head;
   for(int i=0;i<k-1 && h->next;i++)
    h=h->next;

   if(k!=0){
   h->next->pre=NULL;
   head=h->next;
   h->next=NULL;
   h=h1;
   h1=head;
   
   while(h1->next!=NULL)
    h1=h1->next;
   h1->next=h;
   h->pre=h1;
   h=head;
   }
   output(h);

}
