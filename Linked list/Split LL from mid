
*** Split LL from mid and make it circuler***
*** Time complexity : O(N)
*** Space complexity : 0(1)


#include<iostream>
#include<unordered_map>
using namespace std;
class node{
  public:
  int data;
  node *next;
};

void input(int x,node *&head){
  node *temp=new node;
  temp->data=x;
  temp->next=head;
  head=temp;
}

void output(node *&head){
  node *h=head;
  while(h!=NULL){
    cout<<h->data<<" ";
    h=h->next;
  }
}

int main()
{
    node *head,*t,*c,*h;
    head=NULL;
    
    int arr[]={5,2,7,9,1,8,3,4,6};
    for(int i=0;i<sizeof(arr)/4;i++)
     input(arr[i],head);
    output(head); 

    int count=0;
    h=head;
    while(h){
      count++;
      h=h->next;
    }

    h=head;
    for(int i=0;i<count/2;i++)
     h=h->next;
    
    node*h1=h->next;
    h->next=head;
    
    h=h1;
    while(h->next)
     h=h->next;
    h->next=h1;

    cout<<endl;
    for(int i=0;i<10;i++){
      cout<<head->data<<" ";
      head=head->next;
    }
    cout<<endl;
    t=c;
    for(int i=0;i<10;i++){
      cout<<h1->data<<" ";
      h1=h1->next;
    } 
  
}
