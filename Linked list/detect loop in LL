
*** To detect loop in LL ***
*** Time complexity : O(N)
*** Space complexity : 0(N)


#include<iostream>
#include<unordered_map>
using namespace std;
class node{
  public:
  int data;
  node *next;
};

void input(int x,node *&head){
  node *temp=new node;
  temp->data=x;
  temp->next=head;
  head=temp;
}

void output(node *&head){
  node *h=head;
  while(h!=NULL){
    cout<<h->data<<" ";
    h=h->next;
  }
}

int main()
{
    node *head,*t,*c,*h;
    head=NULL;
    bool flag=false;
    int x,k;
    int arr[]={1,2,3,4,5,6};

    for(int i=0;i<sizeof(arr)/4;i++)
     input(arr[i],head);
    output(head);

    t=head;
    c=head;
    for(int i=0;i<(sizeof(arr)/4)-1;i++){
     if(i<2)
      t=t->next;
     c=c->next;
    }

    c->next=t;
    c=head;
    cout<<endl;
    for(int i=0;i<10 and c!=NULL;i++){
      cout<<c->data<<" ";
      c=c->next;
    }
    cout<<endl;
    c=head;
    unordered_map<node*,int>m;
    while(c!=NULL){
      if(m[c]>1){
       cout<<"loop";
       flag=true;
       break;
      }
      else{
       c=c->next;
       m[c]++;
      }
    }
    if(flag==false)
     cout<<"no loop";

   Node*slow=head;
   Node*fast=head;

   while(fast and fast->next){
    slow=slow->next;
    fast=fast->next->next;
    if(slow==fast){
     cout<<"yes ";break;}
   }

   cout<<"no ";
}


***ALTERNATE***
*** Time complexity : O(N)
*** Space complexity : 0(1)


#include<iostream>
using namespace std;
class node{
  public:
  int data;
  node *next;
};

void input(int x,node *&head){
  node *temp=new node;
  temp->data=x;
  temp->next=head;
  head=temp;
}

void output(node *&head){
  node *h=head;
  while(h!=NULL){
    cout<<h->data<<" ";
    h=h->next;
  }
}

int main()
{
    node *head,*t,*c,*h;
    head=NULL;
    bool flag=false;
    int x,k;
    int arr[]={1,2,3,4,5,6};

    for(int i=0;i<sizeof(arr)/4;i++)
     input(arr[i],head);
    output(head);
  
    Node*slow=head;
    Node*fast=head;

    while(fast and fast->next){
     slow=slow->next;
     fast=fast->next->next;
     if(slow==fast){
      cout<<"yes ";break;}
    }
  
   cout<<"no ";
}
