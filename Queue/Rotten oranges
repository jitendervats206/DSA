
*** find the time need to rott all the oranges ***
*** Time complexity : O(N*N)
*** Space complexity : O(N)


#include<iostream>
#include<queue>
using namespace std;
int main()
{
   int arr[3][3]={0,1,2,   0,1,2,    2,1,1};
   queue<pair<int,int>> q;
   int m=sizeof(arr)/4,count=0;
   int n=sizeof(arr[0])/4;
   
   for(int i=0;i<m/n;i++)
    for(int j=0;j<n;j++)
     if(arr[i][j]==2)
      q.push({i,j});

   q.push({-1,-1});

   while(!q.empty()){
    int i=q.front().first;
    int j=q.front().second;

    if(i==-1 and j==-1 and q.size()==1)
      break;  
    else if(i==-1 and j==-1 and q.size()>1){
      count++;
      q.push({-1,-1});
    }
    else{
      if(arr[i-1][j]==1 and (i-1)>=0){
       arr[i-1][j]=2;
       q.push({i-1,j});}
      if(arr[i+1][j]==1 and (i+1)<m/n){
       arr[i+1][j]=2;
       q.push({i+1,j});}
      if(arr[i][j-1]==1 and (j-1)>=0){
       arr[i][j-1]=2;
       q.push({i,j-1});}
      if(arr[i][j+1]==1 and (j+1)<n){
       arr[i][j+1]=2;
       q.push({i,j+1});}
    }
      q.pop();
   }

   cout<<count<<endl;
   for(int i=0;i<m/n;i++){
    for(int j=0;j<n;j++)
      cout<<arr[i][j]<<" ";
      cout<<endl;
   }

}
