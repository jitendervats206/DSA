
*** make queue using 2 stack ***
*** Time complexity : O(N)
*** Space complexity : O(1)


#include<iostream>
#include<stack>
using namespace std;
void push(int x,stack<int>&s1){
   s1.push(x);
   cout<<"pushed"<<endl;
  
}

void pop(stack<int>&s1,stack<int> &s2){
  if(s2.empty()){
    while(!s1.empty()){
        s2.push(s1.top());
        s1.pop();
    }
    if(s2.empty())
     cout<<"queue underflow"<<endl;
    else
     s2.pop();
  }
  else
   s2.pop();
   cout<<"popped"<<endl;
}

void front(stack<int>&s1,stack<int> &s2){
   if(s2.empty()){
    while(!s1.empty()){
        s2.push(s1.top());
        s1.pop();
    }
     if(s2.empty())
      cout<<"queue underflow"<<endl;
     else
      cout<<s2.top()<<endl;
    }
   else
    cout<<s2.top()<<endl;

}

int main()
{
    stack<int>s1,s2;
    push(4,s1);
    push(5,s1);
    push(6,s1);
    pop(s1,s2);
    front(s1,s2);
}

