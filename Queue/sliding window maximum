
*** To find sliding window max ***
*** Time complexity : O(N*N)
*** Space complexity : 0(1)


#include<iostream>
#include<deque>
#include<vector>
using namespace std;
int main()
{
    int arr[]={3,2,1,-3,-5,-10,-18,-70};
    vector<int>v;
    deque<int> dq;
    int k=3;
    dq.push_back(arr[0]);
    for(int i=1;i<k-1;i++){
        while(!dq.empty() and dq.back()<arr[i])
         dq.pop_back();
        dq.push_back(arr[i]);
    }

    int x=k-1;
    for(int i=0;x<sizeof(arr)/4;i++){
      while(!dq.empty() and dq.back()<arr[x])
        dq.pop_back();
      dq.push_back(arr[x]);
      v.push_back(dq.front());
      if(arr[i]==dq.front())
       dq.pop_front();
      x++;
    }

    for(int i=0;i<v.size();i++)
     cout<<v[i]<<" ";
   
}
