
*** Matrix rectangle ***
*** Time complexity : O(NLogN)
*** Space complexity : O(1)


#include<iostream>
#include<vector>
#include<bits/stdc++.h>
#include<stack>
using namespace std;
bool comp(int a,int b) {
 return a>b;
}

int main()
{ 
  int arr[3][5]={0,1,0,1,0, 0,1,0,1,1 ,1,1,1,0,0, };
  int count=1,mx=0;
  int n=sizeof(arr[0])/4; 
  int m=(sizeof(arr)/4)/n;

  for(int i=0;i<m;i++){
   for(int j=0;j<n;j++)
    cout<<arr[i][j]<<" ";
   cout<<endl;
  }

  for(int i=1;i<m;i++)
    for(int j=0;j<n;j++){
      if(arr[i-1][j]==0 or arr[i][j]==0)
       continue;
      else
       arr[i][j]=arr[i][j]+arr[i-1][j];
    }

  cout<<endl;
  for(int i=0;i<m;i++){
    for(int j=0;j<n;j++)
     cout<<arr[i][j]<<" ";
    cout<<endl;
  }
  cout<<endl;

    for(int i=0;i<n;i++){
      int j=i-1;
      while(j>-1 and arr[m-1][j]>=arr[m-1][i]){
        count++;
        j--;
      }
      j=i+1;
      while(j<n and arr[m-1][j]>=arr[m-1][i]){
        count++;
        j++;
      }
      mx=max(mx,arr[m-1][i]*count);
      count=1;
    }
    cout<<endl<<mx;
}
