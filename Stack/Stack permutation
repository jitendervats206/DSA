
*** stack permutation  ***
*** Time complexity : O(N)
*** Space complexity : O(1)


#include<iostream>
#include<stack>
#include<vector>
using namespace std;
int main()
{
  stack<int>s;
  vector<int>v;
  bool flag=false;
  int arr1[]={1,2,3};
  int arr2[]={2,1,3};
  int a=0,b=0;

  for(int i=0;i<sizeof(arr1)/4+sizeof(arr2)/4;i++){
    if(s.empty()){
     s.push(arr1[a]);
     a++;
    } 
    else if(!s.empty() and s.top()==arr2[b]){
      v.push_back(s.top());
      s.pop();
      b++;
    }
    else{
     s.push(arr1[a]);
     a++;
    }
  }

  for(int i=0;i<sizeof(arr2)/4;i++)
    if(v[i]!=arr2[i]){
      cout<<"no";
      flag=true;
      break;
    }
    
  if(flag==false) 
    cout<<"yes";
    
}
