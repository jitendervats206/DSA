
*** sort stack using another stack ***
*** Time complexity : O(N)
*** Space complexity : 0(N)


#include<iostream>
#include<stack>
using namespace std;
int main()
{
    stack<int>s;
    stack<int>s1;
    s.push(2);
    s.push(4);
    s.push(3);
    s.push(1);
    s.push(5);
    
    while(!s.empty()){
     int x=s.top();
     s.pop();         
     while(!s1.empty() and s1.top()>x){
       s.push(s1.top());
       s1.pop();
     }
     if(s1.empty() or s1.top()<x)
      s1.push(x);
    }
   
    while(!s1.empty()){
     s.push(s1.top());
     s1.pop();
    }
    while(!s.empty()){
     cout<<s.top()<<" ";
     s.pop();
    }
}
