
*** postorder traversal ***
*** Time complexity : O(N)
*** Space complexity : 0(N)



#include<iostream>
#include<unordered_map>
#include<stack>
using namespace std;
class node{
   public:
   int data;
   node *left,*right;
};

node *input(){
    int x;
    cin>>x;
    if(x<0)
     return 0;

    node *temp=new node;
    temp->data=x;
    cout<<"enter "<<x<<" left node : ";
    temp->left=input();
    cout<<"enter "<<x<<" right node : ";
    temp->right=input();
    return temp;
}

int main()
{
    node *root;
    unordered_map<node*,int>m;
    int l=0,r=0;
    cout<<"enter root node : ";
    root=input();

    cout<<endl<<"postorder : ";
    s.push(root);
    m[root]=1;
    while(!s.empty()){
       if(s.top()->left and m[s.top()->left]!=1)
        s.push(s.top()->left);
       else if(s.top()->right and m[s.top()->right]!=1)
        s.push(s.top()->right);
       else{
        cout<<s.top()->data<<" ";
        m[s.top()]=1;
        s.pop();
       }  
    }
}
