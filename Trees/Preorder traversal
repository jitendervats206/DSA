
*** To find  apir sum in LL ***
*** Time complexity : O(N)
*** Space complexity : 0(N)


#include<iostream>
#include<unordered_map>
#include<stack>
using namespace std;
class node{
   public:
   int data;
   node *left,*right;
};

node *input(){
    int x;
    cin>>x;
    if(x<0)
     return 0;

    node *temp=new node;
    temp->data=x;
    cout<<"enter "<<x<<" left node : ";
    temp->left=input();
    cout<<"enter "<<x<<" right node : ";
    temp->right=input();
    return temp;
}

int main()
{
    node *root;
    unordered_map<node*,int>m;
    int l=0,r=0;
    cout<<"enter root node : ";
    root=input();

    stack<node *>s;
    s.push(root);
    cout<<"preorder : ";
    while(!s.empty()){
      node *t=s.top();
      s.pop();
      cout<<t->data<<" ";
      if(t->right)
       s.push(t->right);
      if(t->left)
       s.push(t->left);
    }
}
