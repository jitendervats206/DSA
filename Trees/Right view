
*** To print the right view ***
*** Time complexity : O(N)
*** Space complexity : 0(N)


#include<iostream>
#include<queue>
using namespace std;
class node{
   public:
   int data;
   node *left,*right;
};

node *input(){
    int x;
    cin>>x;
    if(x<0)
     return 0;

    node *temp=new node;
    temp->data=x;
    cout<<"enter "<<x<<" left node : ";
    temp->left=input();
    cout<<"enter "<<x<<" right node : ";
    temp->right=input();
    return temp;
}

void rightview(queue<node*>q,int n){
    cout<<q.front()->data<<" ";
     if(q.front()->left)
     q.push(q.front()->left);                           
     if(q.front()->right)                       
      q.push(q.front()->right);
     q.pop();
     n=q.size();

    while(!q.empty()){           
     if(q.front()->left)
     q.push(q.front()->left);                           
     if(q.front()->right)                       
      q.push(q.front()->right);
     q.pop();
     n--;
     if(n==0)
      n=q.size();
     if(n==1)
      cout<<q.front()->data<<" ";
    }
}

int main()
{
    node *root;
    queue<node*>q;
    cout<<"enter root node : ";
    root=input();
    q.push(root);
    rightview(q,0);

}

