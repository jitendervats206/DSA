
*** level order traversal of tree ***
*** Time complexity : O(N)
*** Space complexity : 0(N)

#include<iostream>
#include<queue>
using namespace std;
class node{
    public:
    int data;
    node *left,*right;
};

void output(queue<node*>q){
    if(q.empty())
     return;
    cout<<q.front()->data<<" ";
    if(q.front()->left)
     q.push(q.front()->left);
    if(q.front()->right)
     q.push(q.front()->right);
    q.pop();
    output(q);
    
}

int main()
{
    int x;
    queue<node*>q;
    node *y=new node;
    cout<<"enter root node : ";
    cin>>x;
    y->data=x;
    q.push(y);
    
    while(!q.empty()){
        node*t=q.front();
        q.pop();
        cout<<"enter "<<t->data<<" left : ";
        cin>>x;
        if(x>-1){
         t->left=new node;
         t->left->data=x;
         q.push(t->left);
        }
        else
         t->left=NULL;
        cout<<"enter "<<t->data<<" right : ";
        cin>>x;
        if(x>-1){
          t->right=new node;
          t->right->data=x;
          q.push(t->right);
        }
        else
          t->right=NULL;
    }
   
    q.push(y);
    output(q);
}

