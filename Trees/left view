
*** To print the left view of tree ***
*** Time complexity : O(N)
*** Space complexity : 0(N)



#include<iostream>
#include<queue>
using namespace std;
class node{
   public:
   int data;
   node *left,*right;
};

node *input(){
    int x;
    cin>>x;
    if(x<0)
     return 0;

    node *temp=new node;
    temp->data=x;
    cout<<"enter "<<x<<" left node : ";
    temp->left=input();
    cout<<"enter "<<x<<" right node : ";
    temp->right=input();
    return temp;
}

void leftview(queue<node*>q,int n){

     int x=1,n=1;
     while(!q.empty()){
         x--;
         if(x==0){
             cout<<q.front()->data<<" ";
             n=q.size()-1;
       }
          if(q.front()->right){
          q.push(q.front()->right);
         n++;
         }
         if(q.front()->left){
          q.push(q.front()->left);
          n++;
       }
       
         if(x==0)
          x=n;
         q.pop();
     }

}

int main()
{
    node *root;
    queue<node*>q;
    cout<<"enter root node : ";
    root=input();
    q.push(root);
    leftview(q,0);

}

