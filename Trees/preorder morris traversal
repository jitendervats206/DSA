
*** preorder morris traversal ***
*** Time complexity : O(N)
*** Space complexity : 0(1)



#include<iostream>
using namespace std;
class node{
  public:
  int data;
  node *left,*right;
};

node *input(){
    int x;
    cin>>x;
    if(x<0)
     return 0;

    node *temp=new node;
    temp->data=x;
    cout<<"enter "<<x<<" left node : ";
    temp->left=input();
    cout<<"enter "<<x<<" right node : ";
    temp->right=input();
    return temp;
}

void morrispre(node*root){
    while(root){
        if(root->left){
          node*temp=root->left;
          while(temp->right!=NULL and temp->right!=root)
            temp=temp->right;
          if(!temp->right){
           cout<<root->data<<" ";
           temp->right=root;
           root=root->left;
          }
          else{
           temp->right=NULL;
           root=root->right;
          }
        }
        else{
         cout<<root->data<<" ";
         root=root->right;
        }
    }
}
int main()
{ 
    node *root,*r;
    cout<<"enter root node : ";
    root=input();
    cout<<endl<<"morris preorder : ";
    r=root;
    morrispre(r);
}
